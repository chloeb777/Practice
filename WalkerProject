  Walker[] walkerArray;
  Color[] colorArray;
int n = 10;
void setup() {
  size(500, 500);
  walkerArray = new Walker[n];
  colorArray = new Color[n];
  for (int i =0; i<n; i++) {
    colorArray[i] = new Color((int)(Math.random()*256), (int)(Math.random()*256), (int)(Math.random()*256));
    walkerArray[i] = new Walker(((colorArray[i]).newColor),i);
}}
void draw() {
  background(0);
  if (!mousePressed) {
     for (int i =0; i<n; i++) {
       (walkerArray[i]).walk();
     }
  } else {
     for (int i = 0; i<n; i++) {
       (walkerArray[i]).partialWalk();
     }
  }
for (int i = 0; i<n; i++) {
  (walkerArray[i]).show();
     for (int j = 0; j<n; j++) {
        if ((dist((walkerArray[i]).myX,(walkerArray[i]).myY,(walkerArray[j]).myX,(walkerArray[j]).myY)<50)&&(dist((walkerArray[i]).myX,(walkerArray[i]).myY,(walkerArray[j]).myX,(walkerArray[j]).myY)>0)) {
          (walkerArray[i]).myC=color(255,255,255);
          (walkerArray[j]).myC=color(255,255,255);
}
        if (dist((walkerArray[i]).myX,(walkerArray[i]).myY,(walkerArray[j]).myX,(walkerArray[j]).myY)!=0) {
        if (!(dist((walkerArray[i]).myX,(walkerArray[i]).myY,(walkerArray[j]).myX,(walkerArray[j]).myY)<50)) {
          (walkerArray[i]).myC=(colorArray[i]).newColor;
        }}
}}

}
class Color {
  color newColor;
  Color(int a, int b, int c) {
    newColor = color (a,b,c);
  }}

class Walker {
  int myX, myY, myC, myI;
  Walker(int c_, int i) {
    myC = c_;
    myX = (int) (Math.random()*300) + 100;
    myY = (int) (Math.random()*300) + 100;
    myI= i;
  }
   Walker(int x_, int y_, int c_) {
   myC = c_;
   myX = x_;
   myY = y_;
   }  
  void walk() {
    myX += ((int)(Math.random()*3) - 1)*2;  //-2, 0, 4
    myY += ((int)(Math.random()*3) - 1)*2;  //-2, 0, 4
  }
  void partialWalk() {
    if (myX > mouseX)
      myX += (int)(Math.random()*3) - 3;//-3, -2, -1
    else
      myX += (int)(Math.random()*3) + 3;//3, 4, 5
    if (myY > mouseY)
      myY += (int)(Math.random()*3) - 3;//-3, -2, -1
    else
      myY += (int)(Math.random()*3) + 3;//3, 4, 5
  }
  void show() {
    fill(myC);
    ellipse(myX, myY, 50, 50);
    fill(0);
  }
}
